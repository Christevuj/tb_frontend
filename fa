warning: in the working copy of 'android/settings.gradle.kts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'linux/flutter/generated_plugin_registrant.cc', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'linux/flutter/generated_plugin_registrant.h', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'linux/flutter/generated_plugins.cmake', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'macos/Flutter/GeneratedPluginRegistrant.swift', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'windows/flutter/generated_plugin_registrant.cc', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'windows/flutter/generated_plugin_registrant.h', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'windows/flutter/generated_plugins.cmake', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/android/app/build.gradle.kts b/android/app/build.gradle.kts[m
[1mindex aeb4767..7875047 100644[m
[1m--- a/android/app/build.gradle.kts[m
[1m+++ b/android/app/build.gradle.kts[m
[36m@@ -1,5 +1,8 @@[m
 plugins {[m
     id("com.android.application")[m
[32m+[m[32m    // START: FlutterFire Configuration[m
[32m+[m[32m    id("com.google.gms.google-services")[m
[32m+[m[32m    // END: FlutterFire Configuration[m
     id("kotlin-android")[m
     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.[m
     id("dev.flutter.flutter-gradle-plugin")[m
[36m@@ -25,6 +28,7 @@[m [mandroid {[m
         targetSdk = flutter.targetSdkVersion[m
         versionCode = flutter.versionCode[m
         versionName = flutter.versionName[m
[32m+[m[32m        minSdkVersion 23[m
     }[m
 [m
     buildTypes {[m
[36m@@ -38,3 +42,6 @@[m [mandroid {[m
 flutter {[m
     source = "../.."[m
 }[m
[32m+[m
[32m+[m[32mapply plugin: 'com.google.gms.google-services'[m
[41m+[m
[1mdiff --git a/android/settings.gradle.kts b/android/settings.gradle.kts[m
[1mindex ab39a10..bd7522f 100644[m
[1m--- a/android/settings.gradle.kts[m
[1m+++ b/android/settings.gradle.kts[m
[36m@@ -19,6 +19,9 @@[m [mpluginManagement {[m
 plugins {[m
     id("dev.flutter.flutter-plugin-loader") version "1.0.0"[m
     id("com.android.application") version "8.7.3" apply false[m
[32m+[m[32m    // START: FlutterFire Configuration[m
[32m+[m[32m    id("com.google.gms.google-services") version("4.3.15") apply false[m
[32m+[m[32m    // END: FlutterFire Configuration[m
     id("org.jetbrains.kotlin.android") version "2.1.0" apply false[m
 }[m
 [m
[1mdiff --git a/lib/accounts/patient_create1.dart b/lib/accounts/patient_create1.dart[m
[1mindex 0099a95..9244df6 100644[m
[1m--- a/lib/accounts/patient_create1.dart[m
[1m+++ b/lib/accounts/patient_create1.dart[m
[36m@@ -1,6 +1,7 @@[m
 import 'package:flutter/material.dart';[m
[31m-import 'package:tb_frontend/guest/glanding_page.dart';[m
 import 'package:tb_frontend/login_screen.dart';[m
[32m+[m[32mimport 'package:tb_frontend/services/auth_service.dart';[m
[32m+[m[32mimport 'package:firebase_auth/firebase_auth.dart';[m
 [m
 class SignupScreen extends StatefulWidget {[m
   const SignupScreen({super.key});[m
[36m@@ -10,13 +11,16 @@[m [mclass SignupScreen extends StatefulWidget {[m
 }[m
 [m
 class _SignupScreenState extends State<SignupScreen> {[m
[31m-  final TextEditingController _firstNameController = TextEditingController();[m
[31m-  final TextEditingController _lastNameController = TextEditingController();[m
[31m-  final TextEditingController _emailController = TextEditingController();[m
[31m-  final TextEditingController _passwordController = TextEditingController();[m
[32m+[m[32m  final _firstNameController = TextEditingController();[m
[32m+[m[32m  final _lastNameController = TextEditingController();[m
[32m+[m[32m  final _emailController = TextEditingController();[m
[32m+[m[32m  final _passwordController = TextEditingController();[m
 [m
   bool _obscurePassword = true;[m
   bool _hasAgreed = false;[m
[32m+[m[32m  bool _isLoading = false;[m
[32m+[m
[32m+[m[32m  final AuthService _authService = AuthService();[m
 [m
   @override[m
   void initState() {[m
[36m@@ -30,7 +34,7 @@[m [mclass _SignupScreenState extends State<SignupScreen> {[m
     showDialog([m
       context: context,[m
       barrierDismissible: false,[m
[31m-      builder: (BuildContext context) {[m
[32m+[m[32m      builder: (context) {[m
         return StatefulBuilder([m
           builder: (context, setStateDialog) {[m
             return AlertDialog([m
[36m@@ -41,17 +45,7 @@[m [mclass _SignupScreenState extends State<SignupScreen> {[m
                   children: [[m
                     const Text([m
                       'Effective Date: June 11, 2025\n\n'[m
[31m-                      'By accessing or using the TBisita platform, you hereby acknowledge and agree to be bound by the following Terms of Use and Privacy Policy. If you do not agree to these terms, you must discontinue use of the Service.\n\n'[m
[31m-                      'By using TBisita, you expressly consent to the collection, processing, and storage of your personal data, which may include but is not limited to:\n'[m
[31m-                      'â€¢ Full name, age, sex, and contact information\n'[m
[31m-                      'â€¢ Health-related information (e.g., TB symptoms, medication schedules, treatment adherence)\n'[m
[31m-                      'â€¢ Usage data such as check-ins, consultation logs, and communication with health workers\n\n'[m
[31m-                      'This data will be used solely for the purpose of tracking, monitoring, and improving tuberculosis care. Authorized TB-DOTS health workers and licensed medical professionals may access your data to support treatment, provide follow-ups, and ensure medical compliance. Your data will be handled with strict confidentiality in accordance with the Data Privacy Act of 2012 (Republic Act No. 10173) of the Philippines.\n\n'[m
[31m-                      'You agree to:\n'[m
[31m-                      'â€¢ Provide true, accurate, and up-to-date information;\n'[m
[31m-                      'â€¢ Use the Service in compliance with applicable laws and regulations;\n'[m
[31m-                      'â€¢ Keep your login credentials secure and confidential.\n\n'[m
[31m-                      'All content, features, source code, and design elements of TBisita are the exclusive property of the developers and may not be copied, modified, distributed, or used without prior written consent.',[m
[32m+[m[32m                      'By accessing or using the TBisita platform... (terms text here)',[m
                       style: TextStyle(fontSize: 14),[m
                     ),[m
                     const SizedBox(height: 16),[m
[36m@@ -59,7 +53,7 @@[m [mclass _SignupScreenState extends State<SignupScreen> {[m
                       contentPadding: EdgeInsets.zero,[m
                       controlAffinity: ListTileControlAffinity.leading,[m
                       title: const Text([m
[31m-                        'I agree to the company Terms of Service and Privacy Policy',[m
[32m+[m[32m                        'I agree to the Terms of Service and Privacy Policy',[m
                         style: TextStyle(fontSize: 14),[m
                       ),[m
                       value: isChecked,[m
[36m@@ -76,9 +70,7 @@[m [mclass _SignupScreenState extends State<SignupScreen> {[m
                 TextButton([m
                   onPressed: isChecked[m
                       ? () {[m
[31m-                          setState(() {[m
[31m-                            _hasAgreed = true;[m
[31m-                          });[m
[32m+[m[32m                          setState(() => _hasAgreed = true);[m
                           Navigator.of(context).pop();[m
                         }[m
                       : null,[m
[36m@@ -92,6 +84,49 @@[m [mclass _SignupScreenState extends State<SignupScreen> {[m
     );[m
   }[m
 [m
[32m+[m[32m  Future<void> _signUp() async {[m
[32m+[m[32m    if (_firstNameController.text.isEmpty ||[m
[32m+[m[32m        _lastNameController.text.isEmpty ||[m
[32m+[m[32m        _emailController.text.isEmpty ||[m
[32m+[m[32m        _passwordController.text.isEmpty) {[m
[32m+[m[32m      ScaffoldMessenger.of(context).showSnackBar([m
[32m+[m[32m        const SnackBar(content: Text('Please fill all fields')),[m
[32m+[m[32m      );[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    setState(() => _isLoading = true);[m
[32m+[m
[32m+[m[32m    String? error = await _authService.signUp([m
[32m+[m[32m      firstName: _firstNameController.text,[m
[32m+[m[32m      lastName: _lastNameController.text,[m
[32m+[m[32m      email: _emailController.text,[m
[32m+[m[32m      password: _passwordController.text,[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    setState(() => _isLoading = false);[m
[32m+[m
[32m+[m[32m    if (error == null) {[m
[32m+[m[32m      // Force sign out after sign up[m
[32m+[m[32m      await FirebaseAuth.instance.signOut();[m
[32m+[m
[32m+[m[32m      ScaffoldMessenger.of(context).showSnackBar([m
[32m+[m[32m        const SnackBar([m
[32m+[m[32m            content: Text('Account created successfully! Please log in.')),[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      Navigator.pushAndRemoveUntil([m
[32m+[m[32m        context,[m
[32m+[m[32m        MaterialPageRoute(builder: (context) => const TBisitaLoginScreen()),[m
[32m+[m[32m        (route) => false,[m
[32m+[m[32m      );[m
[32m+[m[32m    } else {[m
[32m+[m[32m      ScaffoldMessenger.of(context).showSnackBar([m
[32m+[m[32m        SnackBar(content: Text(error)),[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
   @override[m
   Widget build(BuildContext context) {[m
     if (!_hasAgreed) {[m
[36m@@ -103,137 +138,89 @@[m [mclass _SignupScreenState extends State<SignupScreen> {[m
     return Scaffold([m
       body: SafeArea([m
         child: Padding([m
[31m-          padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 40),[m
[32m+[m[32m          padding: const EdgeInsets.all(24),[m
           child: Column([m
             crossAxisAlignment: CrossAxisAlignment.start,[m
             children: [[m
[31m-              const Text([m
[31m-                'Sign up',[m
[31m-                style: TextStyle([m
[31m-                  fontSize: 32,[m
[31m-                  fontWeight: FontWeight.bold,[m
[31m-                ),[m
[31m-              ),[m
[32m+[m[32m              const Text('Sign up',[m
[32m+[m[32m                  style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold)),[m
               const SizedBox(height: 40),[m
[31m-              TextField([m
[31m-                controller: _firstNameController,[m
[31m-                decoration: InputDecoration([m
[31m-                  labelText: 'First name',[m
[31m-                  border: OutlineInputBorder([m
[31m-                    borderRadius: BorderRadius.circular(12),[m
[31m-                  ),[m
[31m-                ),[m
[31m-              ),[m
[32m+[m[32m              _buildTextField(_firstNameController, 'First name'),[m
               const SizedBox(height: 20),[m
[31m-              TextField([m
[31m-                controller: _lastNameController,[m
[31m-                decoration: InputDecoration([m
[31m-                  labelText: 'Last name',[m
[31m-                  border: OutlineInputBorder([m
[31m-                    borderRadius: BorderRadius.circular(12),[m
[31m-                  ),[m
[31m-                ),[m
[31m-              ),[m
[32m+[m[32m              _buildTextField(_lastNameController, 'Last name'),[m
               const SizedBox(height: 20),[m
[31m-              TextField([m
[31m-                controller: _emailController,[m
[31m-                decoration: InputDecoration([m
[31m-                  labelText: 'Email address',[m
[31m-                  border: OutlineInputBorder([m
[31m-                    borderRadius: BorderRadius.circular(12),[m
[31m-                  ),[m
[31m-                ),[m
[31m-                keyboardType: TextInputType.emailAddress,[m
[31m-              ),[m
[32m+[m[32m              _buildTextField(_emailController, 'Email address', email: true),[m
               const SizedBox(height: 20),[m
[31m-              TextField([m
[31m-                controller: _passwordController,[m
[31m-                obscureText: _obscurePassword,[m
[31m-                decoration: InputDecoration([m
[31m-                  labelText: 'Password',[m
[31m-                  border: OutlineInputBorder([m
[31m-                    borderRadius: BorderRadius.circular(12),[m
[31m-                  ),[m
[31m-                  suffixIcon: IconButton([m
[31m-                    icon: Icon([m
[31m-                      _obscurePassword[m
[31m-                          ? Icons.visibility_off[m
[31m-                          : Icons.visibility,[m
[31m-                    ),[m
[31m-                    onPressed: () {[m
[31m-                      setState(() {[m
[31m-                        _obscurePassword = !_obscurePassword;[m
[31m-                      });[m
[31m-                    },[m
[31m-                  ),[m
[31m-                ),[m
[31m-              ),[m
[32m+[m[32m              _buildTextField(_passwordController, 'Password', password: true),[m
               const SizedBox(height: 30),[m
[31m-              SizedBox([m
[31m-                width: double.infinity,[m
[31m-                height: 50,[m
[31m-                child: ElevatedButton([m
[31m-                  onPressed: () {[m
[31m-                    // Handle Sign Up logic here[m
[31m-                  },[m
[31m-                  style: ElevatedButton.styleFrom([m
[31m-                    backgroundColor: Colors.redAccent,[m
[31m-                    shape: RoundedRectangleBorder([m
[31m-                      borderRadius: BorderRadius.circular(14),[m
[31m-                    ),[m
[31m-                  ),[m
[31m-                  child: const Text([m
[31m-                    'Sign Up',[m
[31m-                    style: TextStyle(fontSize: 16, color: Colors.white),[m
[31m-                  ),[m
[31m-                ),[m
[31m-              ),[m
[31m-              const SizedBox(height: 15),[m
[31m-              Center([m
[31m-                child: TextButton([m
[31m-                  onPressed: () {[m
[31m-                    Navigator.pushReplacement([m
[31m-                      context,[m
[31m-                      MaterialPageRoute([m
[31m-                          builder: (context) => const GlandingPage()),[m
[31m-                    );[m
[31m-                  },[m
[31m-                  child: const Text([m
[31m-                    'Guest Mode',[m
[31m-                    style: TextStyle(color: Colors.redAccent),[m
[31m-                  ),[m
[31m-                ),[m
[31m-              ),[m
[32m+[m[32m              _buildSignUpButton(),[m
               const Spacer(),[m
[31m-              Center([m
[31m-                child: Row([m
[31m-                  mainAxisAlignment: MainAxisAlignment.center,[m
[31m-                  children: [[m
[31m-                    const Text('Already have an account? '),[m
[31m-                    GestureDetector([m
[31m-                      onTap: () {[m
[31m-                        Navigator.pushReplacement([m
[31m-                          context,[m
[31m-                          MaterialPageRoute([m
[31m-                            builder: (context) => const TBisitaLoginScreen(),[m
[31m-                          ),[m
[31m-                        );[m
[31m-                